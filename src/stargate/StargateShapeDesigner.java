package stargate;

import classes.AirBlock;
import classes.AttributedBlockElement;
import classes.BlockAttribute;
import classes.BlockElement;
import classes.Field;
import classes.NumerableBlockAttribute;
import java.awt.Color;
import java.awt.Component;
import java.awt.Point;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractButton;
import javax.swing.ButtonGroup;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import javax.swing.JToggleButton;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * StargateShapeDesigner.java
 *
 * Created on 12.11.2011, 20:35:53
 */

/**
 *
 * @author Christopher
 */
public class StargateShapeDesigner extends javax.swing.JFrame {

    /** Creates new form StargateShapeDesigner */
    public StargateShapeDesigner() {
        initComponents();
        stargateSettings = new Settings();
        setAttributePanelVisibility(false, null);
//        availableAttributes = new HashMap<String, Boolean>();
//        availableAttributes.put("D", true);
//        availableAttributes.put("N", true);
//        availableAttributes.put("I", true);
//        availableAttributes.put("A", true);
//        availableAttributes.put("IA", true);
//        availableAttributes.put("EP", true);
//        availableAttributes.put("EM", true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        blocks = new stargate.unselectedButtonGroup();
        stargateBlockAttributes = new stargate.unselectedButtonGroup();
        layers = new javax.swing.ButtonGroup();
        EinstellungenTab = new javax.swing.JTabbedPane();
        OptionenPanel = new javax.swing.JPanel();
        stargate_name_label = new javax.swing.JLabel();
        GateName = new javax.swing.JTextField();
        woosh_ticks_label = new javax.swing.JLabel();
        light_ticks_label = new javax.swing.JLabel();
        woosh_ticks = new javax.swing.JComboBox();
        light_ticks = new javax.swing.JComboBox();
        jSeparator1 = new javax.swing.JSeparator();
        portal_material_label = new javax.swing.JLabel();
        portal_material = new javax.swing.JComboBox();
        iris_material_label = new javax.swing.JLabel();
        iris_material = new javax.swing.JComboBox();
        stargate_material_label = new javax.swing.JLabel();
        stargate_material = new javax.swing.JComboBox();
        light_material_label = new javax.swing.JLabel();
        active_material = new javax.swing.JComboBox();
        redstone_activated = new javax.swing.JCheckBox();
        jButton4 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        fieldWidth = new javax.swing.JTextField();
        fieldHeight = new javax.swing.JTextField();
        OKButton = new javax.swing.JButton();
        ZeichenPanel = new javax.swing.JPanel();
        jSeparator3 = new javax.swing.JSeparator();
        BlockPanel = new javax.swing.JPanel();
        stargateBlock = new javax.swing.JToggleButton();
        portalBlock = new javax.swing.JToggleButton();
        airBlock = new javax.swing.JToggleButton();
        redstoneGateActivatedBlock = new javax.swing.JToggleButton();
        redstoneActivateBlock = new javax.swing.JToggleButton();
        redstoneSignBlock = new javax.swing.JToggleButton();
        LayerPanel = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        Layer10 = new javax.swing.JToggleButton();
        Layer9 = new javax.swing.JToggleButton();
        Layer8 = new javax.swing.JToggleButton();
        Layer7 = new javax.swing.JToggleButton();
        Layer6 = new javax.swing.JToggleButton();
        Layer5 = new javax.swing.JToggleButton();
        Layer4 = new javax.swing.JToggleButton();
        Layer3 = new javax.swing.JToggleButton();
        Layer2 = new javax.swing.JToggleButton();
        Layer1 = new javax.swing.JToggleButton();
        AttributePanel = new javax.swing.JPanel();
        signName = new javax.swing.JRadioButton();
        activationSwitch = new javax.swing.JRadioButton();
        signDialer = new javax.swing.JRadioButton();
        irisActivationSwitch = new javax.swing.JRadioButton();
        teleportPlayer = new javax.swing.JRadioButton();
        teleportMinecart = new javax.swing.JRadioButton();
        light = new javax.swing.JCheckBox();
        lightNumber = new javax.swing.JTextField();
        saveAttributesButton = new javax.swing.JButton();
        fieldPanel = new stargate.FieldPanel();
        vorschau3DPanel = new javax.swing.JPanel();
        shapePreviewPanel = new stargate.ShapePreviewPanel(fieldPanel.getField());
        LayerText = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ShapeAusgabe = new javax.swing.JTextArea();
        exportShapeBtn = new javax.swing.JButton();
        shapePreviewPanelAdvanced1 = new stargate.ShapePreviewPanelAdvanced();
        menue = new javax.swing.JMenuBar();
        menueDatei = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        menueInfo = new javax.swing.JMenu();
        menueAbout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        EinstellungenTab.setName("Layer#1"); // NOI18N
        EinstellungenTab.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                include_textArea(evt);
            }
        });

        stargate_name_label.setText("Stargate Name");

        woosh_ticks_label.setText("\"Woosh\" - Ticks");

        light_ticks_label.setText("Light - Ticks");

        woosh_ticks.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "3", "4", "5" }));
        woosh_ticks.setSelectedIndex(3);

        light_ticks.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "3", "4", "5" }));
        light_ticks.setSelectedIndex(2);

        portal_material_label.setText("Portal Material");

        portal_material.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Stilles Wasser", "Stille Lava", "Portal", "Luft" }));

        iris_material_label.setText("Iris Material");

        iris_material.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Stein", "Diamanten Block", "Glass", "Eisen Block", "Bedrock", "Obsidian", "Glowstone", "Lapis Lazuid Block" }));

        stargate_material_label.setText("Stargate Material");

        stargate_material.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Stein", "Diamanten Block", "Glass", "Eisen Block", "Bedrock", "Obsidian", "Glowstone", "Lapis Lazuid Block" }));
        stargate_material.setSelectedIndex(5);

        light_material_label.setText("Light Material");

        active_material.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Glowstone", "Glowing Redstone Ore" }));

        redstone_activated.setText("Redstone aktivierbar");

        jButton4.setText("Einstellungen speichern");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                einstellungen_speichern(evt);
            }
        });

        fieldWidth.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        fieldWidth.setText("" + Field.STANDARDCOLUMNS);

        fieldHeight.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        fieldHeight.setText("" + Field.STANDARDROWS);

        OKButton.setText("Setzen");
        OKButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Feld_setzen(evt);
            }
        });

        javax.swing.GroupLayout OptionenPanelLayout = new javax.swing.GroupLayout(OptionenPanel);
        OptionenPanel.setLayout(OptionenPanelLayout);
        OptionenPanelLayout.setHorizontalGroup(
            OptionenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OptionenPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(OptionenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(OptionenPanelLayout.createSequentialGroup()
                        .addComponent(redstone_activated)
                        .addContainerGap())
                    .addGroup(OptionenPanelLayout.createSequentialGroup()
                        .addComponent(light_material_label)
                        .addContainerGap(752, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, OptionenPanelLayout.createSequentialGroup()
                        .addGroup(OptionenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 323, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, OptionenPanelLayout.createSequentialGroup()
                                .addComponent(iris_material_label)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 267, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 323, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, OptionenPanelLayout.createSequentialGroup()
                                .addComponent(stargate_name_label)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(GateName, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, OptionenPanelLayout.createSequentialGroup()
                                .addGroup(OptionenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(woosh_ticks_label)
                                    .addComponent(portal_material_label)
                                    .addComponent(stargate_material_label))
                                .addGap(18, 18, 18)
                                .addGroup(OptionenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(active_material, javax.swing.GroupLayout.Alignment.TRAILING, 0, 222, Short.MAX_VALUE)
                                    .addComponent(stargate_material, javax.swing.GroupLayout.Alignment.TRAILING, 0, 222, Short.MAX_VALUE)
                                    .addComponent(iris_material, javax.swing.GroupLayout.Alignment.TRAILING, 0, 222, Short.MAX_VALUE)
                                    .addComponent(portal_material, javax.swing.GroupLayout.Alignment.TRAILING, 0, 222, Short.MAX_VALUE)
                                    .addGroup(OptionenPanelLayout.createSequentialGroup()
                                        .addComponent(woosh_ticks, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                                        .addComponent(light_ticks_label)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(light_ticks, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(36, 36, 36)
                        .addComponent(fieldWidth, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fieldHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(OKButton)
                        .addGap(284, 284, 284))
                    .addGroup(OptionenPanelLayout.createSequentialGroup()
                        .addComponent(jButton4)
                        .addContainerGap(671, Short.MAX_VALUE))))
        );
        OptionenPanelLayout.setVerticalGroup(
            OptionenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OptionenPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(OptionenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stargate_name_label)
                    .addComponent(GateName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fieldWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fieldHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(OKButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(OptionenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(woosh_ticks_label)
                    .addComponent(light_ticks_label)
                    .addComponent(light_ticks, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(woosh_ticks, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(OptionenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(portal_material_label)
                    .addComponent(portal_material, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(OptionenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(iris_material_label)
                    .addComponent(iris_material, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(OptionenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stargate_material_label)
                    .addComponent(stargate_material, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(OptionenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(light_material_label)
                    .addComponent(active_material, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(redstone_activated)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4)
                .addContainerGap(239, Short.MAX_VALUE))
        );

        EinstellungenTab.addTab("Einstellungen", OptionenPanel);

        ZeichenPanel.setPreferredSize(new java.awt.Dimension(820, 500));

        blocks.add(stargateBlock);
        stargateBlock.setForeground(new java.awt.Color(255, 255, 255));
        stargateBlock.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stargate/images/stargateBlock.jpg"))); // NOI18N
        stargateBlock.setBorder(null);
        stargateBlock.setMaximumSize(new java.awt.Dimension(40, 40));
        stargateBlock.setMinimumSize(new java.awt.Dimension(40, 40));
        stargateBlock.setName("StargateBlock"); // NOI18N
        stargateBlock.setPreferredSize(new java.awt.Dimension(40, 40));
        stargateBlock.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/stargate/images/stargateBlock_selected.jpg"))); // NOI18N
        stargateBlock.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/stargate/images/stargateBlock_selected.jpg"))); // NOI18N
        stargateBlock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BlockTypSelected(evt);
            }
        });

        blocks.add(portalBlock);
        portalBlock.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stargate/images/portalBlock.jpg"))); // NOI18N
        portalBlock.setBorder(null);
        portalBlock.setMaximumSize(new java.awt.Dimension(40, 40));
        portalBlock.setMinimumSize(new java.awt.Dimension(40, 40));
        portalBlock.setName("PortalBlock"); // NOI18N
        portalBlock.setPreferredSize(new java.awt.Dimension(40, 40));
        portalBlock.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/stargate/images/portalBlock_selected.jpg"))); // NOI18N
        portalBlock.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/stargate/images/portalBlock_selected.jpg"))); // NOI18N
        portalBlock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BlockTypSelected(evt);
            }
        });

        blocks.add(airBlock);
        airBlock.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stargate/images/airBlock.jpg"))); // NOI18N
        airBlock.setBorder(null);
        airBlock.setMaximumSize(new java.awt.Dimension(40, 40));
        airBlock.setMinimumSize(new java.awt.Dimension(40, 40));
        airBlock.setName("AirBlock"); // NOI18N
        airBlock.setPreferredSize(new java.awt.Dimension(40, 40));
        airBlock.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/stargate/images/airBlock_selected.jpg"))); // NOI18N
        airBlock.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/stargate/images/airBlock_selected.jpg"))); // NOI18N
        airBlock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BlockTypSelected(evt);
            }
        });

        blocks.add(redstoneGateActivatedBlock);
        redstoneGateActivatedBlock.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stargate/images/redstoneGateActivatedBlock.jpg"))); // NOI18N
        redstoneGateActivatedBlock.setBorder(null);
        redstoneGateActivatedBlock.setMaximumSize(new java.awt.Dimension(40, 40));
        redstoneGateActivatedBlock.setMinimumSize(new java.awt.Dimension(40, 40));
        redstoneGateActivatedBlock.setPreferredSize(new java.awt.Dimension(40, 40));
        redstoneGateActivatedBlock.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/stargate/images/redstoneGateActivatedBlock_selected.jpg"))); // NOI18N
        redstoneGateActivatedBlock.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/stargate/images/redstoneGateActivatedBlock_selected.jpg"))); // NOI18N

        blocks.add(redstoneActivateBlock);
        redstoneActivateBlock.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stargate/images/redstoneActivateBlock.jpg"))); // NOI18N
        redstoneActivateBlock.setBorder(null);
        redstoneActivateBlock.setMaximumSize(new java.awt.Dimension(40, 40));
        redstoneActivateBlock.setMinimumSize(new java.awt.Dimension(40, 40));
        redstoneActivateBlock.setPreferredSize(new java.awt.Dimension(40, 40));
        redstoneActivateBlock.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/stargate/images/redstoneActivateBlock_selected.jpg"))); // NOI18N
        redstoneActivateBlock.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/stargate/images/redstoneActivateBlock_selected.jpg"))); // NOI18N

        blocks.add(redstoneSignBlock);
        redstoneSignBlock.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stargate/images/redstoneSignBlock.jpg"))); // NOI18N
        redstoneSignBlock.setBorder(null);
        redstoneSignBlock.setMaximumSize(new java.awt.Dimension(40, 40));
        redstoneSignBlock.setMinimumSize(new java.awt.Dimension(40, 40));
        redstoneSignBlock.setPreferredSize(new java.awt.Dimension(40, 40));
        redstoneSignBlock.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/stargate/images/redstoneSignBlock_selected.jpg"))); // NOI18N
        redstoneSignBlock.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/stargate/images/redstoneSignBlock_selected.jpg"))); // NOI18N

        javax.swing.GroupLayout BlockPanelLayout = new javax.swing.GroupLayout(BlockPanel);
        BlockPanel.setLayout(BlockPanelLayout);
        BlockPanelLayout.setHorizontalGroup(
            BlockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BlockPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(BlockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BlockPanelLayout.createSequentialGroup()
                        .addComponent(redstoneSignBlock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(redstoneActivateBlock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(redstoneGateActivatedBlock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(BlockPanelLayout.createSequentialGroup()
                        .addComponent(stargateBlock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(portalBlock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(airBlock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        BlockPanelLayout.setVerticalGroup(
            BlockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BlockPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(BlockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(portalBlock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(BlockPanelLayout.createSequentialGroup()
                        .addGroup(BlockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(stargateBlock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(airBlock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(BlockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(redstoneGateActivatedBlock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(redstoneActivateBlock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(redstoneSignBlock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jLabel11.setText("Layer:");

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("1");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("2");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("3");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("4");

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("5");

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("6");

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("7");

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("8");

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("9");

        jLabel10.setText("10");

        layers.add(Layer10);
        Layer10.setName("9"); // NOI18N
        Layer10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                layerSelected(evt);
            }
        });

        layers.add(Layer9);
        Layer9.setName("8"); // NOI18N
        Layer9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                layerSelected(evt);
            }
        });

        layers.add(Layer8);
        Layer8.setName("7"); // NOI18N
        Layer8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                layerSelected(evt);
            }
        });

        layers.add(Layer7);
        Layer7.setName("6"); // NOI18N
        Layer7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                layerSelected(evt);
            }
        });

        layers.add(Layer6);
        Layer6.setName("5"); // NOI18N
        Layer6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                layerSelected(evt);
            }
        });

        layers.add(Layer5);
        Layer5.setName("4"); // NOI18N
        Layer5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                layerSelected(evt);
            }
        });

        layers.add(Layer4);
        Layer4.setName("3"); // NOI18N
        Layer4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                layerSelected(evt);
            }
        });

        layers.add(Layer3);
        Layer3.setName("2"); // NOI18N
        Layer3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                layerSelected(evt);
            }
        });

        layers.add(Layer2);
        Layer2.setName("1"); // NOI18N
        Layer2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                layerSelected(evt);
            }
        });

        layers.add(Layer1);
        Layer1.setSelected(true);
        Layer1.setName("0"); // NOI18N
        Layer1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                layerSelected(evt);
            }
        });

        javax.swing.GroupLayout LayerPanelLayout = new javax.swing.GroupLayout(LayerPanel);
        LayerPanel.setLayout(LayerPanelLayout);
        LayerPanelLayout.setHorizontalGroup(
            LayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LayerPanelLayout.createSequentialGroup()
                .addGroup(LayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(LayerPanelLayout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(jLabel11))
                    .addGroup(LayerPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jLabel10))
                    .addGroup(LayerPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(Layer1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Layer2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Layer3, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Layer4, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Layer5, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Layer6, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Layer7, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Layer8, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Layer9, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(Layer10, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        LayerPanelLayout.setVerticalGroup(
            LayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LayerPanelLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel11)
                .addGap(6, 6, 6)
                .addGroup(LayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addGap(6, 6, 6)
                .addGroup(LayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Layer1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Layer2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Layer3, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Layer4, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Layer5, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Layer6, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Layer7, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Layer8, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Layer9, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Layer10, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        stargateBlockAttributes.add(signName);
        signName.setText("Schild mit Name");
        signName.setName("N"); // NOI18N
        signName.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                arAttributeInBlockElement(evt);
            }
        });

        stargateBlockAttributes.add(activationSwitch);
        activationSwitch.setText("Aktivierungs Schalter");
        activationSwitch.setName("A"); // NOI18N
        activationSwitch.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                arAttributeInBlockElement(evt);
            }
        });

        stargateBlockAttributes.add(signDialer);
        signDialer.setText("Ziel Auswahlschild");
        signDialer.setToolTipText("");
        signDialer.setName("D"); // NOI18N
        signDialer.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                arAttributeInBlockElement(evt);
            }
        });

        stargateBlockAttributes.add(irisActivationSwitch);
        irisActivationSwitch.setText("Iris Aktivierungs Schalter");
        irisActivationSwitch.setName("IA"); // NOI18N
        irisActivationSwitch.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                arAttributeInBlockElement(evt);
            }
        });

        stargateBlockAttributes.add(teleportPlayer);
        teleportPlayer.setText("Teleport Spieler");
        teleportPlayer.setName("EP"); // NOI18N
        teleportPlayer.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                arAttributeInBlockElement(evt);
            }
        });

        stargateBlockAttributes.add(teleportMinecart);
        teleportMinecart.setText("Teleport Minecart");
        teleportMinecart.setName("EM"); // NOI18N
        teleportMinecart.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                arAttributeInBlockElement(evt);
            }
        });

        light.setText("Light");
        light.setName("L"); // NOI18N
        light.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lightEnabledDisabled(evt);
            }
        });

        lightNumber.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        lightNumber.setText("1");
        lightNumber.setEnabled(false);
        lightNumber.setName("lightnumber"); // NOI18N

        saveAttributesButton.setText("speichern");
        saveAttributesButton.setName("saveAttribute"); // NOI18N
        saveAttributesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveAttributesButton(evt);
            }
        });

        javax.swing.GroupLayout AttributePanelLayout = new javax.swing.GroupLayout(AttributePanel);
        AttributePanel.setLayout(AttributePanelLayout);
        AttributePanelLayout.setHorizontalGroup(
            AttributePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AttributePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AttributePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AttributePanelLayout.createSequentialGroup()
                        .addComponent(irisActivationSwitch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 180, Short.MAX_VALUE)
                        .addComponent(saveAttributesButton))
                    .addGroup(AttributePanelLayout.createSequentialGroup()
                        .addGroup(AttributePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(signName)
                            .addComponent(activationSwitch)
                            .addComponent(signDialer))
                        .addGap(52, 52, 52)
                        .addGroup(AttributePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(AttributePanelLayout.createSequentialGroup()
                                .addComponent(light)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lightNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(teleportMinecart)
                            .addComponent(teleportPlayer))))
                .addContainerGap())
        );
        AttributePanelLayout.setVerticalGroup(
            AttributePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AttributePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AttributePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(signName)
                    .addComponent(teleportPlayer))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AttributePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(activationSwitch)
                    .addComponent(teleportMinecart))
                .addGap(0, 0, 0)
                .addGroup(AttributePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(signDialer)
                    .addComponent(light)
                    .addComponent(lightNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(irisActivationSwitch)
                .addContainerGap(13, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AttributePanelLayout.createSequentialGroup()
                .addContainerGap(78, Short.MAX_VALUE)
                .addComponent(saveAttributesButton)
                .addContainerGap())
        );

        fieldPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                placeBlock(evt);
            }
        });

        javax.swing.GroupLayout fieldPanelLayout = new javax.swing.GroupLayout(fieldPanel);
        fieldPanel.setLayout(fieldPanelLayout);
        fieldPanelLayout.setHorizontalGroup(
            fieldPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 806, Short.MAX_VALUE)
        );
        fieldPanelLayout.setVerticalGroup(
            fieldPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 363, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout ZeichenPanelLayout = new javax.swing.GroupLayout(ZeichenPanel);
        ZeichenPanel.setLayout(ZeichenPanelLayout);
        ZeichenPanelLayout.setHorizontalGroup(
            ZeichenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ZeichenPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ZeichenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ZeichenPanelLayout.createSequentialGroup()
                        .addComponent(BlockPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AttributePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(8, 8, 8)
                        .addComponent(LayerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(fieldPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        ZeichenPanelLayout.setVerticalGroup(
            ZeichenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ZeichenPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ZeichenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BlockPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AttributePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LayerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(fieldPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        EinstellungenTab.addTab("Zeichnen", ZeichenPanel);

        javax.swing.GroupLayout shapePreviewPanelLayout = new javax.swing.GroupLayout(shapePreviewPanel);
        shapePreviewPanel.setLayout(shapePreviewPanelLayout);
        shapePreviewPanelLayout.setHorizontalGroup(
            shapePreviewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 806, Short.MAX_VALUE)
        );
        shapePreviewPanelLayout.setVerticalGroup(
            shapePreviewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 493, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout vorschau3DPanelLayout = new javax.swing.GroupLayout(vorschau3DPanel);
        vorschau3DPanel.setLayout(vorschau3DPanelLayout);
        vorschau3DPanelLayout.setHorizontalGroup(
            vorschau3DPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(vorschau3DPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(shapePreviewPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        vorschau3DPanelLayout.setVerticalGroup(
            vorschau3DPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(vorschau3DPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(shapePreviewPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        EinstellungenTab.addTab("3D Ansicht", vorschau3DPanel);

        ShapeAusgabe.setColumns(20);
        ShapeAusgabe.setEditable(false);
        ShapeAusgabe.setRows(5);
        jScrollPane1.setViewportView(ShapeAusgabe);

        exportShapeBtn.setText("exportieren als .shape");
        exportShapeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportShape(evt);
            }
        });

        javax.swing.GroupLayout LayerTextLayout = new javax.swing.GroupLayout(LayerText);
        LayerText.setLayout(LayerTextLayout);
        LayerTextLayout.setHorizontalGroup(
            LayerTextLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LayerTextLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 610, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(exportShapeBtn)
                .addContainerGap(65, Short.MAX_VALUE))
        );
        LayerTextLayout.setVerticalGroup(
            LayerTextLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 515, Short.MAX_VALUE)
            .addGroup(LayerTextLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(exportShapeBtn)
                .addContainerGap(481, Short.MAX_VALUE))
        );

        EinstellungenTab.addTab("Text", LayerText);

        javax.swing.GroupLayout shapePreviewPanelAdvanced1Layout = new javax.swing.GroupLayout(shapePreviewPanelAdvanced1);
        shapePreviewPanelAdvanced1.setLayout(shapePreviewPanelAdvanced1Layout);
        shapePreviewPanelAdvanced1Layout.setHorizontalGroup(
            shapePreviewPanelAdvanced1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 826, Short.MAX_VALUE)
        );
        shapePreviewPanelAdvanced1Layout.setVerticalGroup(
            shapePreviewPanelAdvanced1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 515, Short.MAX_VALUE)
        );

        EinstellungenTab.addTab("test", shapePreviewPanelAdvanced1);

        menueDatei.setText("Datei");

        jMenuItem1.setText("Speichern");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileSave(evt);
            }
        });
        menueDatei.add(jMenuItem1);

        jMenuItem2.setText("Beenden");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileClose(evt);
            }
        });
        menueDatei.add(jMenuItem2);

        menue.add(menueDatei);

        menueInfo.setText("Info");

        menueAbout.setText("About");
        menueAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openAbout(evt);
            }
        });
        menueInfo.add(menueAbout);

        menue.add(menueInfo);

        setJMenuBar(menue);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(EinstellungenTab, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 831, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(EinstellungenTab, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 543, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Feld_setzen(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Feld_setzen

        fieldPanel.initFieldElements(Integer.parseInt(fieldWidth.getText()),
                                      Integer.parseInt(fieldHeight.getText()));
    }//GEN-LAST:event_Feld_setzen


    private void einstellungen_speichern(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_einstellungen_speichern

        stargateSettings.setOptions(GateName.getText(),
                                   portal_material.getSelectedIndex(),
                                   iris_material.getSelectedIndex(),
                                   stargate_material.getSelectedIndex(),
                                   active_material.getSelectedIndex(),
                                   redstone_activated.isSelected(),
                                   woosh_ticks.getSelectedIndex(),
                                   light_ticks.getSelectedIndex());

    }//GEN-LAST:event_einstellungen_speichern


    private void include_textArea(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_include_textArea
        String text = "";
        text = text.concat(stargateSettings.toString());
        text = text.concat(fieldPanel.toString());
        ShapeAusgabe.setText(text);
    }//GEN-LAST:event_include_textArea

private void placeBlock(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_placeBlock
// TODO add your handling code here:
    Point p = evt.getPoint();
    int column = (int) (p.x / fieldPanel.getBlocksize());
    int row = (int) (p.y / fieldPanel.getBlocksize());
    
    String name = getSelectedButtonName(blocks);
    
    try {
        fieldPanel.setBlockElement((BlockElement) (Class.forName("classes." + name).newInstance()), column, row);
    } catch (ClassNotFoundException cnfE) {
        currentSelectedBlockElement.setBorderColor(Color.BLACK);
        currentSelectedBlockElement = fieldPanel.getBlockElement(column, row);
        currentSelectedBlockElement.setBorderColor(Color.yellow);
        fieldPanel.repaint();
        System.out.println(currentSelectedBlockElement.toString());
        setAttributePanelVisibility(true, currentSelectedBlockElement);
    } catch (IllegalAccessException iaE) {
        
    } catch (InstantiationException iE) {
        
    }
}//GEN-LAST:event_placeBlock

    /**
     * Anzeigen/Ausblenden der Attribute für einen bestimmten Block.
     * @param b anzeigen/ausblenden.
     * @param blockElement von welchem Element die Attribute angezeuigt werden sollen.
     */
    private void setAttributePanelVisibility(boolean b, BlockElement blockElement) {
        //TODO attribute setzten oder nicht setzen.
        saveAttributesButton.setVisible(b);
        if(blockElement == null) {
            setStargateAttributeVisibility(b);
            setPortalAttributeVisibility(b);
            setAirAttributeVisibility(b);
            
        } else if("S".equals(blockElement.getName())) {
            setStargateAttributeVisibility(b);
            AttributedBlockElement sBlock = (AttributedBlockElement) blockElement;
            HashMap<String, BlockAttribute> attributeMap = sBlock.getAttributeMap();
            
            if(!attributeMap.isEmpty()) {
                Iterator<String> it = attributeMap.keySet().iterator();
                while(it.hasNext()) {
                    BlockAttribute attribute = attributeMap.get(it.next());
                    if("L".equals(attribute.getName())) {
                        int i = ((NumerableBlockAttribute)attribute).getNumber();
                        light.setSelected(true);
                        lightNumber.setText("" + i);
                    } else {
                        String name = attribute.getName();
                        Enumeration em = stargateBlockAttributes.getElements();
                        while(em.hasMoreElements()) {
                            JRadioButton attributeButton = (JRadioButton) em.nextElement();
                            if(attributeButton.getName().equals(name)) {
                                attributeButton.setSelected(true);
                                
                            }
                        }
                    }
                    
                }
            } else {
                stargateBlockAttributes.clearSelection();
                Enumeration em = stargateBlockAttributes.getElements();
                while(em.hasMoreElements()) {
                    JRadioButton attributeButton = (JRadioButton) em.nextElement();
//                    attributeButton.setEnabled(availableAttributes.get(attributeButton.getName()));
                }
            }
            
        } else if(blockElement.getName().equals("P")) {
            setPortalAttributeVisibility(b);
        } else if(blockElement.getName().equals("I")) {
            setAirAttributeVisibility(b);
        }
        
        
    }
    
    private void setStargateAttributeVisibility(boolean b) {
        signName.setVisible(b);
        activationSwitch.setVisible(b);
        signDialer.setVisible(b);
        irisActivationSwitch.setVisible(b);
        teleportMinecart.setVisible(b);
        teleportPlayer.setVisible(b);
        light.setVisible(b);
        lightNumber.setVisible(b);
    }
    
    private void setPortalAttributeVisibility(boolean b) {
        
    }
    
    private void setAirAttributeVisibility(boolean b) {
        
    }
    
private void lightEnabledDisabled(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lightEnabledDisabled
// TODO add your handling code here:
    lightNumber.setEnabled(!lightNumber.isEnabled());
}//GEN-LAST:event_lightEnabledDisabled

/**
 * Speichert die gewählten Attribute.
 * @param evt 
 */
private void saveAttributesButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveAttributesButton
// TODO add your handling code here:
    /* Name des selectierten Attributes holen.*/
    String attributeName = getSelectedButtonName(stargateBlockAttributes);
    System.out.println(attributeName);
    
    /* Nach dem Speichern, die Attribute wieder ausblenden.*/
    setAttributePanelVisibility(false, null);
}//GEN-LAST:event_saveAttributesButton

/**
 * ADD and REMOVE Attribute Block Element.
 * @param evt 
 */
private void arAttributeInBlockElement(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_arAttributeInBlockElement
// TODO add your handling code here:
    JRadioButton radiobutton = (JRadioButton) evt.getSource();
    if(radiobutton.isSelected()) {
        ((AttributedBlockElement)currentSelectedBlockElement).putAttribute(new BlockAttribute(radiobutton.getName()));
//        availableAttributes.put(radiobutton.getName(), false);
//        System.out.println(availableAttributes.toString());
    } else {
        ((AttributedBlockElement)currentSelectedBlockElement).removeAttribute(radiobutton.getName());
//        availableAttributes.put(radiobutton.getName(), true);
    }
}//GEN-LAST:event_arAttributeInBlockElement

private void BlockTypSelected(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BlockTypSelected
// TODO add your handling code here:
    if(((JToggleButton)evt.getSource()).isSelected()) {
        setAttributePanelVisibility(false, null);
        if((Color.yellow).equals(currentSelectedBlockElement.getBorderColor())) {
            currentSelectedBlockElement.setBorderColor(Color.BLACK);
            fieldPanel.repaint();
            System.out.println("repaint");
        }
    }
}//GEN-LAST:event_BlockTypSelected

    private void layerSelected(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_layerSelected
        // TODO add your handling code here:
        fieldPanel.setCurrentLayer(Integer.parseInt(((JToggleButton)evt.getSource()).getName()));
        System.out.println(fieldPanel.getCurrentLayer());
    }//GEN-LAST:event_layerSelected

    private void openAbout(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openAbout
        // TODO add your handling code here:
        JFrame aboutFrame = new About();
        aboutFrame.setVisible(true);
        aboutFrame.requestFocusInWindow();
    }//GEN-LAST:event_openAbout

    private void fileClose(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileClose
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_fileClose

    private void fileSave(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileSave
        // TODO add your handling code here:
        //wird ersetzt XML Parser
        JFileChooser filechooser = new JFileChooser();
        SSDRFileFilter ssdfFiler = new SSDRFileFilter();
        filechooser.addChoosableFileFilter(ssdfFiler);
        int dialogAnswer = filechooser.showSaveDialog(null);
        
        if(dialogAnswer == JFileChooser.APPROVE_OPTION) {
            File saveFile = filechooser.getSelectedFile();
            
            int overwriteAnswer = JOptionPane.YES_OPTION;
            if(saveFile.exists()) {
                overwriteAnswer = JOptionPane.showConfirmDialog(null, 
                        "Datei existiert bereits.\n Überschreiben??",
                        "Überschreiben?",
                        JOptionPane.YES_NO_OPTION);
            }
            
            if(overwriteAnswer == JOptionPane.YES_OPTION) {
                
                FileSaver saver = new FileSaver(saveFile);

                if(saver != null) {
                    try {
                        saver.write("--- Stargate Shape Designer File ---\n");
                        saver.write("--- Setting ---\n");
                        stargateSettings.parseToFile(saver);
                        saver.write("--- Field ---\n");
                        saver.write("Hight=" + fieldHeight + "\n");
                        saver.write("Width=" + fieldWidth + "\n");
                        
                        
                    } catch (IOException ex) {
                        JOptionPane.showMessageDialog(null, 
                                "Fehler beim schreiben der Datei!",
                                "Schreibfehler",
                                JOptionPane.ERROR_MESSAGE);
                    }
                    
                }
                
            } else {
                fileSave(evt);
            }
        }
        
        
    }//GEN-LAST:event_fileSave

    private void exportShape(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportShape
        // TODO add your handling code here:
        JFileChooser filechooser = new JFileChooser();
        ShapeFileFilter shapeFilter = new ShapeFileFilter();
        filechooser.addChoosableFileFilter(shapeFilter);
        int dialogAnswer = filechooser.showSaveDialog(null);
        
        if(dialogAnswer == JFileChooser.APPROVE_OPTION) {
            
            FileWriter outFileWriter = null;
            File saveFile = filechooser.getSelectedFile();
            int overwriteAnswer = JOptionPane.YES_OPTION;
            if(saveFile.exists()) {
                overwriteAnswer = JOptionPane.showConfirmDialog(null, 
                        "Datei existiert bereits.\n Überschreiben??",
                        "Überschreiben?",
                        JOptionPane.YES_NO_OPTION);
                
            }
            if(overwriteAnswer == JOptionPane.YES_OPTION) {
                
                String shape = ShapeAusgabe.getText();
                String filename = saveFile.getAbsolutePath();
                
                if(!filename.toUpperCase().endsWith(".SHAPE")) {
                    filename += ".shape";
                }
                
                try {
                    outFileWriter = new FileWriter(filename);
                    outFileWriter.write(shape);
                    outFileWriter.flush();
                    outFileWriter.close();
                    JOptionPane.showMessageDialog(null, 
                            "Shape Datei erfolgreich exportiert!",
                            "Exportieren erfolgreich",
                            JOptionPane.INFORMATION_MESSAGE);
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(null,
                            "Fehler beim exportieren von" + filename + ".",
                            "Fehler",
                            JOptionPane.ERROR_MESSAGE);
                } 
            } else {
                exportShape(evt);
            }
            
        }
    }//GEN-LAST:event_exportShape

    private String getSelectedButtonName(ButtonGroup bg) {
        
        String returnString = "";
        
        boolean isFound = false;
        
        Enumeration<AbstractButton> blockButtons = bg.getElements();
        
        while(blockButtons.hasMoreElements() && !isFound) {
            JToggleButton button = (JToggleButton) blockButtons.nextElement();
            
            if(button.isSelected()) {
                returnString = button.getName();
                isFound = true;
            }
        }
        
        return returnString;
    }

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StargateShapeDesigner().setVisible(true);
            }
        });
    }

    private Settings stargateSettings;
    
    private BlockElement currentSelectedBlockElement = new AirBlock();
    
    private HashMap<String, Boolean> availableAttributes;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AttributePanel;
    private javax.swing.JPanel BlockPanel;
    private javax.swing.JTabbedPane EinstellungenTab;
    private javax.swing.JTextField GateName;
    private javax.swing.JToggleButton Layer1;
    private javax.swing.JToggleButton Layer10;
    private javax.swing.JToggleButton Layer2;
    private javax.swing.JToggleButton Layer3;
    private javax.swing.JToggleButton Layer4;
    private javax.swing.JToggleButton Layer5;
    private javax.swing.JToggleButton Layer6;
    private javax.swing.JToggleButton Layer7;
    private javax.swing.JToggleButton Layer8;
    private javax.swing.JToggleButton Layer9;
    private javax.swing.JPanel LayerPanel;
    private javax.swing.JPanel LayerText;
    private javax.swing.JButton OKButton;
    private javax.swing.JPanel OptionenPanel;
    private javax.swing.JTextArea ShapeAusgabe;
    private javax.swing.JPanel ZeichenPanel;
    private javax.swing.JRadioButton activationSwitch;
    private javax.swing.JComboBox active_material;
    private javax.swing.JToggleButton airBlock;
    private stargate.unselectedButtonGroup blocks;
    private javax.swing.JButton exportShapeBtn;
    private javax.swing.JTextField fieldHeight;
    private stargate.FieldPanel fieldPanel;
    private javax.swing.JTextField fieldWidth;
    private javax.swing.JRadioButton irisActivationSwitch;
    private javax.swing.JComboBox iris_material;
    private javax.swing.JLabel iris_material_label;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.ButtonGroup layers;
    private javax.swing.JCheckBox light;
    private javax.swing.JTextField lightNumber;
    private javax.swing.JLabel light_material_label;
    private javax.swing.JComboBox light_ticks;
    private javax.swing.JLabel light_ticks_label;
    private javax.swing.JMenuBar menue;
    private javax.swing.JMenuItem menueAbout;
    private javax.swing.JMenu menueDatei;
    private javax.swing.JMenu menueInfo;
    private javax.swing.JToggleButton portalBlock;
    private javax.swing.JComboBox portal_material;
    private javax.swing.JLabel portal_material_label;
    private javax.swing.JToggleButton redstoneActivateBlock;
    private javax.swing.JToggleButton redstoneGateActivatedBlock;
    private javax.swing.JToggleButton redstoneSignBlock;
    private javax.swing.JCheckBox redstone_activated;
    private javax.swing.JButton saveAttributesButton;
    private stargate.ShapePreviewPanel shapePreviewPanel;
    private stargate.ShapePreviewPanelAdvanced shapePreviewPanelAdvanced1;
    private javax.swing.JRadioButton signDialer;
    private javax.swing.JRadioButton signName;
    private javax.swing.JToggleButton stargateBlock;
    private stargate.unselectedButtonGroup stargateBlockAttributes;
    private javax.swing.JComboBox stargate_material;
    private javax.swing.JLabel stargate_material_label;
    private javax.swing.JLabel stargate_name_label;
    private javax.swing.JRadioButton teleportMinecart;
    private javax.swing.JRadioButton teleportPlayer;
    private javax.swing.JPanel vorschau3DPanel;
    private javax.swing.JComboBox woosh_ticks;
    private javax.swing.JLabel woosh_ticks_label;
    // End of variables declaration//GEN-END:variables

    

}
